
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  0.0.0.0;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   ../www/;
            index  index.html index.htm;
        }

        # 需要在 www\j-lunker 目录下，创建一个名为node_modules指向jigsaw的node_modules，或者将它拷贝过来
        location /j-lunker/node_modules {
            root   ../www/;

            # redirection config for ngx-perfect-scrollbar
            rewrite ngx-perfect-scrollbar/dist/ngx-perfect-scrollbar\.js     /j-lunker/node_modules/ngx-perfect-scrollbar/dist/index.js;
            rewrite ngx-perfect-scrollbar/dist/index$                        /j-lunker/node_modules/ngx-perfect-scrollbar/dist/index.js;
            rewrite ngx-perfect-scrollbar/dist/lib/index$                    /j-lunker/node_modules/ngx-perfect-scrollbar/dist/lib/index.js;
            rewrite ngx-perfect-scrollbar/dist/lib/(perfect-scrollbar\.\w+)$ /j-lunker/node_modules/ngx-perfect-scrollbar/dist/lib/$1.js;

            # redirection config for perfect-scrollbar
            rewrite /j-lunker/node_modules/perfect-scrollbar/(.*)        /j-lunker/node_modules/ngx-perfect-scrollbar/node_modules/perfect-scrollbar/$1;

            # redirection config for rxjs
            rewrite rxjs/operators/index.js                              /j-lunker/node_modules/rxjs/operators.js;
            rewrite rxjs/operators/(\w+/\w+\.js.*)                       /j-lunker/node_modules/rxjs/$1;
            rewrite rxjs/operators/([A-Z]\w+\.js.*)                      /j-lunker/node_modules/rxjs/$1;

            # redirection config for @ngx-translate
            rewrite @ngx-translate/core/src/(translate\.\w+)$            /j-lunker/node_modules/@ngx-translate/core/src/$1.js;
            rewrite @ngx-translate/core/index$                           /j-lunker/node_modules/@ngx-translate/core/index.js;
            rewrite @ngx-translate/core/src/util$                        /j-lunker/node_modules/@ngx-translate/core/src/util.js;
            rewrite @ngx-translate/core/src/missing-translation-handler$ /j-lunker/node_modules/@ngx-translate/core/src/missing-translation-handler.js;
            rewrite @ngx-translate/core$                                 /j-lunker/node_modules/@ngx-translate/core/bundles/core.umd.js;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        
        location /rdk/service {
            proxy_pass http://localhost:5812;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
